# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
manager_hostname = "debian11"
user = "vmadmin"
guest_sshkeys = "~/.ssh/ansible.pub"
image_name = "generic/debian11"

Vagrant.configure("2") do |config|
    config.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--audio", "none"]
        v.customize ["modifyvm", :id, "--boot1", "disk"]
        v.customize ["modifyvm", :id, "--boot2", "none"]
        v.customize ["modifyvm", :id, "--boot3", "none"]
        v.customize ["modifyvm", :id, "--vram",  "16"]
        v.customize ["modifyvm", :id, "--graphicscontroller", "none"]
        v.customize ["modifyvm", :id, "--vrde",  "off"]
        v.memory = 512
        v.cpus = 2
        v.name = "#{manager_hostname}"
    end
# To test
#     config.vm.boot_timeout = 600
#     config.vm.base_mac = "02999D56C03"
#     config.ssh.username = "ubuntuuser"
#     config.ssh.password = "password"
    config.vm.define "debian11" do |i|
      i.vm.box = "#{image_name}"
      i.vm.hostname = "#{manager_hostname}"
#      i.ssh.insert_key = false
      i.vm.box_check_update = false
#      i.vm.base_mac = "mac_address" 
#      i.ssh.username = "ssh_user" 
#      i.ssh.password = "ssh_password"
#      i.vm.network "public_network", bridge: "enp0s10", ip: "192.168.50.53", auto_config: true ###FOR LINUX EXTERNAL NETWORK
      i.vm.network "public_network", bridge: "en0: Wi-Fi", ip: "192.168.50.53", auto_config: true ###FOR MAC EXTERNAL NETWORK

      if File.file?("./hosts") 
        i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
        i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
      end

#      i.vbguest.auto_update = false

      i.vm.provision "shell", inline: "mkdir -p /home/vagrant/.ssh/"
      i.vm.provision "file", source: "#{guest_sshkeys}", destination: "/home/vagrant/.ssh/ansible.pub"
      i.vm.provision "shell", inline: "cat /home/vagrant/.ssh/ansible.pub >> /home/vagrant/.ssh/authorized_keys"

      i.vm.provision "shell", path: "./provision.sh", run: "once"        
      i.vm.provision :ansible do |ansible|
        ansible.verbose = "v"
#       ansible.extra_vars = { "ansible_python_interpreter" => "/usr/bin/python2" }
        ansible.playbook = "../ansible/playbook.yml"

#      i.vm.provision "shell", run: "once", privileged: true, inline: <<-SHELL
#          sudo useradd -m -s /bin/bash -U #{user}
#         sudo mkdir /home/#{user}/.ssh
#         sudo cp #{guest_sshkeys}#{user}_rsa.pub /home/#{user}/.ssh/authorized_keys
#          sudo chown -R #{user}:#{user} /home/#{user}
#          sudo su
#          echo "%#{user} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/#{user}
#          exit
#      SHELL

      i.vm.provision "shell", run: "once", inline: <<-SHELL
          cat /etc/os-release
          ip a | grep inet
      SHELL
     end
  end
end
