# -*- mode: ruby -*-/Users/marek/.vagrant.d/Vagrantfile
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# Change to true if you want to have Docker Swarm ready to work.
auto = ENV['AUTO_START_SWARM'] || true
# Increase numworkers if you want more than 3 nodes
numworkers = 2

# VirtualBox settings
# Increase vmmemory if you want more than 512mb memory in the vm's
# Increase numcpu if you want more cpu's per vm
vmmemory = 1024
numcpu = 2

instances = []

(1..numworkers).each do |n| 
  instances.push({:name => "dsw#{n}", :ip => "192.168.60.#{n+2}"})
end

manager_ip = "192.168.60.2"
manager_hostname = "dsm"

File.open("./hosts", 'w') { |file| 
  file.write("#{manager_ip} #{manager_hostname} #{manager_hostname}\n")
  instances.each do |i|
    file.write("#{i[:ip]} #{i[:name]} #{i[:name]}\n")
  end
  }

# http_proxy = ""
# Proxy configuration
# if ENV['http_proxy']
#       http_proxy = ENV['http_proxy']
#         https_proxy = ENV['https_proxy']
# end

# no_proxy = "localhost,127.0.0.1,#{manager_ip}"
# instances.each do |instance|
#     no_proxy += ",#{instance[:ip]}"
# end

Vagrant.configure("2") do |config|
  config.vm.define "dsm" do |i| 
    i.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--audio", "none"]
        v.customize ["modifyvm", :id, "--boot1", "disk"]
        v.customize ["modifyvm", :id, "--boot2", "none"]
        v.customize ["modifyvm", :id, "--boot3", "none"]
        v.customize ["modifyvm", :id, "--graphicscontroller", "none"]
        v.memory = vmmemory
        v.cpus = numcpu
        v.name = "#{manager_hostname}"
    end
      i.vm.box = "ubuntu/bionic64"
      i.vm.hostname = "dsm"
      i.vm.network "private_network", ip: "#{manager_ip}"
#      i.vm.network "forwarded_port", guest: 80, host: 8092
#      i.vm.network "public_network", bridge: "enp0s10", ip: "192.168.50.56", auto_config: true ###FOR LINUX EXTERNAL NETWORK
      i.vm.network "public_network", bridge: "en0: Wi-Fi (Wireless)", ip: "192.168.50.56", auto_config: true ###FOR MAC EXTERNAL NETWORK   
      
#      i.vm.synced_folder "/home/vadmin/vms/dockerswarm/dsv", "/dsv", owner: "vagrant", group: "vagrant"

      if File.file?("./hosts") 
       i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
       i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
      end 

#      i.vm.provision "file", source: "~/.ssh/id.rsa.pub", destination: "~/.ssh/me.pub"
#      i.vm.provision "shell", inline: <<-SHELL
#         mkdir -p /home/vagrant/.ssh/
#         touch /home/vagrant/.ssh/authorized_keys
#         cat /home/vagrant/.ssh/me.pub >> /home/vagrant/.ssh/authorized_keys
#      SHELL
     
#      i.vbguest.auto_update = false

      i.vm.provision "shell", inline: "mkdir -p /home/vagrant/.ssh/"
      i.vm.provision "file", source: "../ansible/ansible.pub", destination: "/home/vagrant/.ssh/ansible.pub"
      i.vm.provision "shell", inline: "cat /home/vagrant/.ssh/ansible.pub >> /home/vagrant/.ssh/authorized_keys"

      i.vm.provision :ansible do |ansible|
        ansible.verbose = "vv"
        ansible.extra_vars = { "ansible_python_interpreter" => "/usr/bin/python3" }
        ansible.playbook = "../ansible/playbook.yml"
      
      i.vm.provision "shell", path: "./provisionfull.sh", run: "once"
      i.vm.provision "shell", path: "./provisiondockerlink.sh", run: "once"
   
      if auto 
        i.vm.provision "shell", inline: "docker swarm init --advertise-addr #{manager_ip}"
        i.vm.provision "shell", inline: "docker swarm join-token -q worker > /vagrant/token"
      end
end
end
  instances.each do |instance|
     config.vm.define instance[:name] do |i|
      i.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--audio", "none"]
        vb.customize ["modifyvm", :id, "--boot1", "disk"]
        vb.customize ["modifyvm", :id, "--boot2", "none"]
        vb.customize ["modifyvm", :id, "--boot3", "none"]
        vb.customize ["modifyvm", :id, "--graphicscontroller", "none"]
        vb.memory = 512
        vb.cpus = 2
        vb.name = "#{instance[:name]}"
      end
      i.vm.box = "ubuntu/bionic64"
      i.vm.hostname = instance[:name]
      i.vm.network "private_network", ip: "#{instance[:ip]}"

#      i.vbguest.auto_update = false

#      i.vm.synced_folder "/home/vadmin/vms/dockerswarm/dsv", "/dsv", owner: "vagrant", group: "vagrant"
       
      if File.file?("./hosts") 
        i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
        i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
      end
      
      i.vm.provision "shell", inline: "mkdir -p /home/vagrant/.ssh/"
      i.vm.provision "file", source: "../ansible/ansible.pub", destination: "/home/vagrant/.ssh/ansible.pub"
      i.vm.provision "shell", inline: "cat /home/vagrant/.ssh/ansible.pub >> /home/vagrant/.ssh/authorized_keys"

      i.vm.provision :ansible do |ansible|
        ansible.verbose = "vv"
        ansible.extra_vars = { "ansible_python_interpreter" => "/usr/bin/python3" }
        ansible.playbook = "../ansible/playbook.yml"
       
      i.vm.provision "shell", path: "./provisionfull.sh"
      i.vm.provision "shell", path: "./provisiondockerlink.sh"
      
      if auto
        i.vm.provision "shell", inline: "docker swarm join --advertise-addr #{instance[:ip]} --listen-addr #{instance[:ip]}:2377 --token `cat /vagrant/token` #{manager_ip}:2377"
      end
end
end
end
end