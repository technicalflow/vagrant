# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
manager_hostname = "ubuntu"

Vagrant.configure("2") do |config|
    config.vm.provider "virtualbox" do |v|
        v.customize ["modifyvm", :id, "--audio", "none"]
        v.customize ["modifyvm", :id, "--boot1", "disk"]
        v.customize ["modifyvm", :id, "--boot2", "none"]
        v.customize ["modifyvm", :id, "--boot3", "none"]
        v.customize ["modifyvm", :id, "--graphicscontroller", "none"]
        v.memory = 1024
        v.cpus = 2
        v.name = "#{manager_hostname}"
    end
    config.vm.define "ubuntu" do |i|
      i.vm.box = "ubuntu/focal64"
#      i.vm.box_version = "20210811.0.0"
      i.vm.hostname = "#{manager_hostname}"
#      i.vm.base_mac = "mac_address" 
#      i.ssh.username = "ssh_user" 
#      i.ssh.password = "ssh_password"

#      i.vm.network "public_network", bridge: "enp0s10", ip: "192.168.50.60", auto_config: true ###FOR LINUX EXTERNAL NETWORK
      i.vm.network "public_network", bridge: "en0: Wi-Fi (Wireless)", ip: "192.168.50.60", auto_config: true ###FOR MAC EXTERNAL NETWORK


      if File.file?("./hosts") 
        i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
        i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
      end

#      i.vbguest.auto_update = false

      i.vm.provision "shell", inline: "mkdir -p /home/vagrant/.ssh/"
      i.vm.provision "file", source: "../ansible/ansible.pub", destination: "/home/vagrant/.ssh/ansible.pub"
      i.vm.provision "shell", inline: "cat /home/vagrant/.ssh/ansible.pub >> /home/vagrant/.ssh/authorized_keys"

      i.vm.provision "shell", path: "./provision.sh", run: "once"        
      i.vm.provision :ansible do |ansible|
        ansible.verbose = "v"
#        ansible.extra_vars = { "ansible_python_interpreter" => "/usr/bin/python3.8" }
        ansible.playbook = "../ansible/playbook.yml"

      i.vm.provision "shell", run: "once", inline: <<-SHELL
          cat /etc/os-release
          ip a
      SHELL
     end
end
end

